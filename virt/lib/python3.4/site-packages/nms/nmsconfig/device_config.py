#!/usr/bin/env python3

# This is proprietary software.
# Part of cluster monitoring project.
# PEP8 codestyle used, python version 3.
#
# authors: dmitry khodakov <dmitryhd@gmail.com>
# date: 29.10.2014
#
# pylint: disable=C0330, C0326, C0301, C0103

""" List of all devices. """

import nms.nmsconfig.param_group_config as cfgp

devices_init = []
devices_init.append(('ControlServer', 'Сервер управления', 'snmp',
                     cfgp.PARAMETER_LISTS['ServerParamList'] + cfgp.PARAMETER_LISTS['ControlServAdditionalParamList']))
devices_init.append(('MonitoringServer', 'Сервер мониторинга', 'snmp', cfgp.PARAMETER_LISTS['ServerParamList']))
devices_init.append(('FileServer01', 'Файловый сервер №1', 'snmp', cfgp.PARAMETER_LISTS['ServerParamList'] + cfgp.PARAMETER_LISTS['FileServerParamList']))
devices_init.append(('FileServer02', 'Файловый сервер №2', 'snmp', cfgp.PARAMETER_LISTS['ServerParamList'] + cfgp.PARAMETER_LISTS['FileServerParamList']))
devices_init.append(('RAID01A', 'RAID хранилище №1, контроллер А', 'snmp', cfgp.PARAMETER_LISTS['Raid01ParamList'], 'v3'))
devices_init.append(('RAID01B', 'RAID хранилище №1, контроллер В', 'snmp', cfgp.PARAMETER_LISTS['Raid01ParamList'], 'v3'))
devices_init.append(('RAID02A', 'RAID хранилище №2, контроллер А', 'snmp', cfgp.PARAMETER_LISTS['Raid02ParamList'], 'v3'))
devices_init.append(('RAID02B', 'RAID хранилище №2, контроллер В', 'snmp', cfgp.PARAMETER_LISTS['Raid02ParamList'], 'v3'))
devices_init.append(('Switch1810_24_gpu', 'Коммутатор HP 1810, стойка с решающим полем', 'snmp', cfgp.PARAMETER_LISTS['Switch1810ParamList']))
devices_init.append(('Switch1810_24_monitoring', 'Коммутатор HP 1810, стойка системы мониторинга', 'snmp', cfgp.PARAMETER_LISTS['Switch1810ParamList_short']))
devices_init.append(('Switch1910_8', 'Коммутатор HP 1910', 'snmp', cfgp.PARAMETER_LISTS['Switch1910ParamList']))
devices_init.append(('Switch5800', 'Коммутатор HP 5800', 'snmp', cfgp.PARAMETER_LISTS['Switch5800ParamList']))
devices_init.append(('ControlServerBMC', 'Сервер управления интерфейс BMC', 'ipmi', cfgp.PARAMETER_LISTS['MonitoringServerBmcParamList'], 'bmc', True))
devices_init.append(('MonitoringServerBMC', 'Сервер мониторинга, интерфейс BMC', 'ipmi', cfgp.PARAMETER_LISTS['MonitoringServerBmcParamList'],'bmc', True))
devices_init.append(('FileServer01BMC', 'Файловый сервер №1, интерфейс BMC', 'ipmi', cfgp.PARAMETER_LISTS['MonitoringServerBmcParamList'],'bmc', True))
devices_init.append(('FileServer02BMC', 'Файловый сервер №2, интерфейс BMC', 'ipmi', cfgp.PARAMETER_LISTS['MonitoringServerBmcParamList'],'bmc', True))
devices_init.append(('NetBootzModule01', 'Модуль контроля окружающей среды №1', 'snmp', cfgp.PARAMETER_LISTS['NetBootzParamList']))
devices_init.append(('NetBootzModule02', 'Модуль контроля окружающей среды №1', 'snmp', cfgp.PARAMETER_LISTS['NetBootzParamList']))
devices_init.append(('GPUServerBMC01', 'Вычислительный модуль №1, интерфейс BMC', 'ipmi', cfgp.PARAMETER_LISTS['GPUServerBMCParamList'],'bmc', True))
devices_init.append(('GPUServerBMC02', 'Вычислительный модуль №2, интерфейс BMC', 'ipmi', cfgp.PARAMETER_LISTS['GPUServerBMCParamList'],'bmc', True))
devices_init.append(('GPUServerBMC03', 'Вычислительный модуль №3, интерфейс BMC', 'ipmi', cfgp.PARAMETER_LISTS['GPUServerBMCParamList'],'bmc', True))
devices_init.append(('GPUServerBMC04', 'Вычислительный модуль №4, интерфейс BMC', 'ipmi', cfgp.PARAMETER_LISTS['GPUServerBMCParamList'],'bmc', True))
devices_init.append(('GPUServerBMC05', 'Вычислительный модуль №5, интерфейс BMC', 'ipmi', cfgp.PARAMETER_LISTS['GPUServerBMCParamList'],'bmc', True))
devices_init.append(('GPUServerBMC06', 'Вычислительный модуль №6, интерфейс BMC', 'ipmi', cfgp.PARAMETER_LISTS['GPUServerBMCParamList'],'bmc', True))
devices_init.append(('GPUServerBMC07', 'Вычислительный модуль №7, интерфейс BMC', 'ipmi', cfgp.PARAMETER_LISTS['GPUServerBMCParamList'],'bmc', True))
devices_init.append(('GPUServer01', 'Вычислительный модуль №1', 'snmp', cfgp.PARAMETER_LISTS['GPUServerParamList'], 'v2c'))
devices_init.append(('GPUServer02', 'Вычислительный модуль №2', 'snmp', cfgp.PARAMETER_LISTS['GPUServerParamList'], 'v2c'))
devices_init.append(('GPUServer03', 'Вычислительный модуль №3', 'snmp', cfgp.PARAMETER_LISTS['GPUServerParamList'], 'v2c'))
devices_init.append(('GPUServer04', 'Вычислительный модуль №4', 'snmp', cfgp.PARAMETER_LISTS['GPUServerParamList'], 'v2c'))
devices_init.append(('GPUServer05', 'Вычислительный модуль №5', 'snmp', cfgp.PARAMETER_LISTS['GPUServerParamList'], 'v2c'))
devices_init.append(('GPUServer06', 'Вычислительный модуль №6', 'snmp', cfgp.PARAMETER_LISTS['GPUServerParamList'], 'v2c'))
devices_init.append(('GPUServer07', 'Вычислительный модуль №7', 'snmp', cfgp.PARAMETER_LISTS['GPUServerParamList'], 'v2c'))
devices_init.append(('rPDU01', 'Распределитель питания №1', 'snmp', cfgp.PARAMETER_LISTS['rPDU_7921_ParamList']))
devices_init.append(('rPDU02', 'Распределитель питания №2', 'snmp', cfgp.PARAMETER_LISTS['rPDU_7921_ParamList']))
devices_init.append(('rPDU03', 'Распределитель питания №3', 'snmp', cfgp.PARAMETER_LISTS['rPDU_7921_ParamList']))
devices_init.append(('rPDU04', 'Распределитель питания №4', 'snmp', cfgp.PARAMETER_LISTS['rPDU_7921_ParamList']))

SPEC_TYAN_SERV = 'FT77AB7059 TYAN'
SPEC_ASUS_720_SERV = 'RS720-e7/RS12-E (2xXeon, 16xDimm, 6xSATA, 12xHDD, (1+1)PSU, 2U)'
SPEC_ASUS_920_SERV = 'RS920-e7/RS8 (4xXeon, 32xDimm, 6xSATA, 8xHDD, (1+1)PSU, 2U)'
SPEC_PDU = 'APC 8981 (Rack PDU 2G, Switched, ZeroU, 11kW, 230V, (21) C13 & (3) C19)'

NUMBER_OF_GPU_SERVERS = 8
NUMBER_OF_PDUS = 4

gdevices_init = []
gdevices_init.append(('ControlServer',
                      'Сервер управления',
                      '''Предназначен для управления загрузкой задач и приема результатов.<br>
                         <b>Платформа</b>: {}<br>
                         <a href='http://{}'> Перейти к веб интерфейсу BMC</a><br>
                         <a href='/static/{}'> Документация</a>
                      '''.format(SPEC_ASUS_920_SERV, 'csu_bmc.s', 'doc/csudoc.pdf'),
                      ['ControlServer', 'ControlServerBMC']))


gdevices_init.append(('MonitoringServer',
                      'Сервер загрузки и мониторинга',
                      """Предназначен для функционирования системы мониторинга и удаленной загрузки
                         серверов решаюего поля.<br>
                         <b>Платформа</b>: {}<br>
                         <a href='http://{}'> Перейти к веб интерфейсу BMC</a><br>
                         <a href='/static/{}'> Документация</a>
                      """.format(SPEC_ASUS_720_SERV, 'csm_bmc.s', 'doc/servdoc.pdf'),
                      ['MonitoringServer', 'MonitoringServerBMC']
                      ))

gdevices_init.append(('FileServer01',
                      'Файловый сервер №1',
                      """Предоставляет интерфейс к RAID хранилищу. <br>
                         Платформа: {}<br>
                         <a href='http://{}'> Перейти к веб интерфейсу BMC</a> <br>
                         <a href='/static/{}'> Документация</a>
                      """.format(SPEC_ASUS_720_SERV, 'fs_1_bmc.s', 'doc/servdoc.pdf'),
                      ['FileServer01', 'FileServer01BMC']
                      ))

gdevices_init.append(('FileServer02',
                      'Файловый сервер №2',
                      """Предоставляет интерфейс к RAID хранилищу. <br>
                         Платформа: {}<br>
                         <a href='http://{}'> Перейти к веб интерфейсу BMC</a><br>
                         <a href='/static/{}'> Документация</a>
                      """.format(SPEC_ASUS_720_SERV, 'fs_2_bmc.s', 'doc/servdoc.pdf'),
                      ['FileServer02', 'FileServer02BMC']
                      ))

gdevices_init.append(('Switch1810_24_gpu',
                      'Коммутатор решающего поля (HP 1810)',
                      """HP 1810 Switch Series имеет 24 порта Gigabit Ethernet и Fast Ethernet. <br>
                        <a href='http://{}'> Перейти к веб интерфейсу</a> <br>
                        <a href='/static/{}'>Страница спецификации</a> <br>
                        <a href='/static/{}'>Руководство по эксплуатации</a>
                      """.format('serv_sw_1.s', 'doc/sw1810_datasheet.pdf', 'doc/sw1810_guide.pdf'),  # TODO: check, if right
                      ['Switch1810_24_gpu']
                      ))

gdevices_init.append(('Switch1810_24_monitoring',
                      'Коммутатор системы мониторинга (HP 1810)',
                      """HP 1810 Switch Series имеет 24 порта Gigabit Ethernet и Fast Ethernet. <br>
                        <a href='http://{}'> Перейти к веб интерфейсу</a> <br>
                        <a href='/static/{}'>Страница спецификации</a> <br>
                        <a href='/static/{}'>Руководство по эксплуатации</a>
                      """.format('serv_sw_1.s', 'doc/sw1810_datasheet.pdf', 'doc/sw1810_guide.pdf'),  # TODO: check, if right
                      ['Switch1810_24_monitoring']
                      ))

gdevices_init.append(('Switch1910_8',
                      'Коммутатор системы мониторинга (HP 1910)',
                      '''HP 1910 Switch Series имеет 8 портов Gigabit Ethernet и Fast Ethernet. <br>
                        <a href='http://{}'> Перейти к веб интерфейсу.</a> <br>
                        <a href='/static/{}'>Страница спецификации</a> <br>
                        <a href='/static/{}'>Руководство по эксплуатации</a>
                      '''.format('eng_sw.s', 'doc/sw1910_datasheet.pdf', 'doc/sw1910_guide.pdf'),

                      ['Switch1910_8']
                      ))

gdevices_init.append(('Switch5800',
                      'Коммутатор системы управления (HP 5800)',
                      '''HP 5800 Switch Series имеет 24 порта Gigabit Ethernet и Fast Ethernet. <br>
                        <a href='http://{}'> Перейти к веб интерфейсу.</a> <br>
                        <a href='/static/{}'>Страница спецификации</a> <br>
                        <a href='/static/{}'>Руководство по эксплуатации</a>
                      '''.format('calc_sw.s', 'doc/sw5800_datasheet.pdf', 'doc/sw5800_guide.pdf' ),
                      ['Switch5800'],
                      ))

gdevices_init.append(('RAID01A',
                      'RAID хранилище №1, контроллер А',
                      '''Assuredsan™ dothill 3730 20 tb рейд массив raid5<br>
                         <a href='http://{}'> Перейти к веб интерфейсу</a><br>
                         <a href='/static/{}'>Страница спецификации</a><br>
                         <a href='/static/{}'>Руководство по эксплуатации</a><br>
                      '''.format('raid1_a.s','doc/dothill3730_datasheet.pdf', 'doc/dothill3730_guide.pdf'),
                      ['RAID01A'],
                      ))

gdevices_init.append(('RAID01B',
                      'RAID хранилище №1, контроллер B',
                      '''Assuredsan™ dothill 3730 20 tb рейд массив raid5<br>
                         <a href='http://{}'> Перейти к веб интерфейсу</a><br>
                         <a href='/static/{}'>Страница спецификации</a><br>
                         <a href='/static/{}'>Руководство по эксплуатации</a><br>
                      '''.format('raid1_a.s','doc/dothill3730_datasheet.pdf', 'doc/dothill3730_guide.pdf'),
                      ['RAID01B'],
                      ))

gdevices_init.append(('RAID02A',
                      'RAID хранилище №2, контроллер А',
                      '''Assuredsan™ dothill 3730 20 tb рейд массив raid5<br>
                         <a href='http://{}'> Перейти к веб интерфейсу</a><br>
                         <a href='/static/{}'>Страница спецификации</a><br>
                         <a href='/static/{}'>Руководство по эксплуатации</a><br>
                      '''.format('raid1_a.s','doc/dothill3730_datasheet.pdf', 'doc/dothill3730_guide.pdf'),
                      ['RAID02A'],
                      ))

gdevices_init.append(('RAID02B',
                      'RAID хранилище №2, контроллер B',
                      '''Assuredsan™ dothill 3730 20 tb рейд массив raid5<br>
                         <a href='http://{}'> Перейти к веб интерфейсу</a><br>
                         <a href='/static/{}'>Страница спецификации</a><br>
                         <a href='/static/{}'>Руководство по эксплуатации</a><br>
                      '''.format('raid1_a.s','doc/dothill3730_datasheet.pdf', 'doc/dothill3730_guide.pdf'),
                      ['RAID02B'],
                      ))

gdevices_init.append(('NetBootzModule01',
                      'Модуль контроля окружающей среды №1',
                      '''NetBotz® 200 Модуль контроля окружающей среды, позволяет контролировать
                         закрытие дверей, температуру и влажность. <br>
                         <b>Номер стойки:</b> 1<br>
                         <a href='http://{}'> Перейти к веб интерфейсу</a><br>
                         <a href='/static/{}'> Документация</a><br>
                      '''.format('rmu_1.s', 'doc/netbotz_guide.pdf'),  # TODO: check if right.
                      ['NetBootzModule01'],
                      ))

gdevices_init.append(('NetBootzModule02',
                      'Модуль контроля окружающей среды №2',
                      '''NetBotz® 200 Модуль контроля окружающей среды, позволяет контролировать
                         закрытие дверей, температуру и влажность. <br>
                         <b>Номер стойки:</b> 2<br>
                         <a href='http://{}'> Перейти к веб интерфейсу</a><br>
                         <a href='/static/{}'> Документация</a><br>
                      '''.format('rmu_2.s', 'doc/netbotz_guide.pdf'),  # TODO: check if right.
                      ['NetBootzModule02'],
                      ))

for serv_num in range(1, NUMBER_OF_GPU_SERVERS):
    gdevices_init.append(('GPUServer0' + str(serv_num),
                          'Вычислительный модуль №'  + str(serv_num),
                          '''Вычислительный модуль с 8 графическими ускорителями.<br>
                             <b>Платформа</b> {}.<br>
                             <b>Номер стойки:</b> 2<br>
                             <a href='http://{}'> Перейти к веб интерфейсу.</a><br>
                             <a href='/static/{}'> Документация. </a><br>
                          '''.format(SPEC_TYAN_SERV, 'node_{}_bmc.s'.format(serv_num), 'doc/gpuserverdoc.pdf'),
                          ['GPUServerBMC0' + str(serv_num), 'GPUServer0' + str(serv_num)],
                          ))

pdu_hostnames = ['none', 'pdua_U.s', 'pdub_U.s', 'pdua_1.s', 'pdub_1.s', 'pdua_2.s', 'pdub_2.s',]
for pdu_num in range(1, 1 + NUMBER_OF_PDUS):
    gdevices_init.append(('rPDU0' + str(pdu_num),
                          'Распределитель питания №' + str(pdu_num),
                          '''Распределитель питания APC®<br>
                             <b>Платформа</b> {}.<br>
                             <b>Номер стойки:</b> 2<br>
                             <a href='http://{}'> Перейти к веб интерфейсу.</a><br>
                             <a href='/static/{}'> Документация. </a><br>
                          '''.format(SPEC_PDU, pdu_hostnames[pdu_num], 'doc/pdudoc.pdf'),
                          ['rPDU0' + str(pdu_num)],
                          ))

GPUServers = ['GPUServer01',
              'GPUServer02',
              'GPUServer03',
              'GPUServer04',
              'GPUServer05',
              'GPUServer06',
              'GPUServer07']

PowerControlledDevices = ['ControlServerBMC',
                          'MonitoringServerBMC',
                          'FileServer01BMC',
                          'FileServer02BMC',
                          'GPUServerBMC01',
                          'GPUServerBMC02',
                          'GPUServerBMC03',
                          'GPUServerBMC04',
                          'GPUServerBMC05',
                          'GPUServerBMC06',
                          'GPUServerBMC07']



PowerControlledDevicesMap = {'ControlServerBMC' : 'ControlServer',
                             'MonitoringServerBMC' : 'MonitoringServer',
                             'FileServer01BMC': 'FileServer01',
                             'FileServer02BMC': 'FileServer02',
                             'GPUServerBMC01': 'GPUServerBMC01',
                             'GPUServerBMC02': 'GPUServerBMC02',
                             'GPUServerBMC03': 'GPUServerBMC03',
                             'GPUServerBMC04': 'GPUServerBMC04',
                             'GPUServerBMC05': 'GPUServerBMC05',
                             'GPUServerBMC06': 'GPUServerBMC06',
                             'GPUServerBMC07': 'GPUServerBMC07'}

#device:number of outletls
PDU_OUTLET_NUM = {'rPDU01':24, 'rPDU02':24, 'rPDU03':24, 'rPDU04':24}
PDU_RUS_NAMES = {'rPDU01':'Распределитель питания №1',
                  'rPDU02':'Распределитель питания №2',
                  'rPDU03':'Распределитель питания №3',
                  'rPDU04':'Распределитель питания №4',
                  'rPDU05':'Распределитель питания №5',
                  'rPDU06':'Распределитель питания №6',
                  'rPDU07':'Распределитель питания №7',
                  'rPDU08':'Распределитель питания №8',
                  'rPDU09':'Распределитель питания №9',
                  'rPDU10':'Распределитель питания №10'}
# ---------------------------------------------------------------------------
# Device containers: for index view.
# ---------------------------------------------------------------------------
DeviceContainersInit = {
        'rPDUs':('rPDU', 'Распределители питания', 'Распрделители питания'),
        'RAIDs':('RAIDs', 'Хранилища RAID', 'Хранилища RAID'),
        'RMUs': ('RMUs', 'Контроль окружающей среды', ''),
        'switches': ('switches', 'Коммутаторы', ''),
        'calc_units': ('calc_units', 'Решающее поле', '')}

# in fromat Container name -> general device names
ContainersStorage = {'rPDUs': ['rPDU01', 'rPDU02', 'rPDU03', 'rPDU04'],
                     # 'rPDU05', 'rPDU06', 'rPDU07', 'rPDU08',
                     # 'rPDU09', 'rPDU10'],
                      'RAIDs': ['RAID01A', 'RAID01B', 'RAID02A', 'RAID02B'],
                      'RMUs': ['NetBootzModule01', 'NetBootzModule02'],
                      'switches': ['Switch1910_8', 'Switch1810_24_gpu', 'Switch1810_24_monitoring', 'Switch5800'],
                      'calc_units': ['GPUServer01', 'GPUServer02', 'GPUServer03', 'GPUServer04', 'GPUServer05',
                                     'GPUServer06', 'GPUServer07']}

# ---------------------------------------------------------------------------
# Parameter Group dev init
# ---------------------------------------------------------------------------
# gdev name -> param group name
PARAM_GROUP_DEV_INIT = {}
for gdev in gdevices_init:
    PARAM_GROUP_DEV_INIT[gdev[0]] = []

for gpu_gdev in GPUServers:
    PARAM_GROUP_DEV_INIT[gpu_gdev].append('GPUServerCpu')

for server_gdev in ['ControlServer', 'MonitoringServer', 'FileServer01', 'FileServer02']:
    PARAM_GROUP_DEV_INIT[server_gdev].append('CpuVolt')
    for parg_name in cfgp.host_interface_gr_name.keys():
        PARAM_GROUP_DEV_INIT[server_gdev].append(parg_name)

for server_gdev in ['MonitoringServer', 'FileServer01', 'FileServer02']:
    PARAM_GROUP_DEV_INIT[server_gdev].append('ServerCpu')
PARAM_GROUP_DEV_INIT['ControlServer'].append('ControlServerCpu')

tmp = {'Switch1910_8': cfgp.sw1910_interface_gr_name,
       'Switch1810_24_gpu': cfgp.sw1810_interface_gr_name,
       'Switch1810_24_monitoring': cfgp.sw1810_interface_gr_name,
       'Switch5800': cfgp.sw5800_interface_gr_name}

for dev_name, int_gr_names in tmp.items():
    for gr_name in int_gr_names:
        PARAM_GROUP_DEV_INIT[dev_name].append(gr_name)

# Store info about which outlet for which device.
# Format of info: GeneralDevName: ((pdu_number, [outlet1number, outlet2number..]))

# PDU numbering. first - rack number, second - pdu position. (b - near door)
pduUa = 1
pduUb = 2
pdu1a = 3
pdu1b = 4
pdu2a = 5
pdu2b = 6

DEVICE_OUTLETS_MAP = {}
DEVICE_OUTLETS_MAP['ControlServer'] = ((pduUb, [18]), (pduUa, [18]))
DEVICE_OUTLETS_MAP['MonitoringServer'] = ((pduUb, [17]), (pduUa, [17]))
DEVICE_OUTLETS_MAP['FileServer01'] = ((pduUb, [12]), (pduUa, [12]))
DEVICE_OUTLETS_MAP['FileServer02'] = ((pduUb, [11]), (pduUa, [11]))
DEVICE_OUTLETS_MAP['RAID01A'] = ((pduUa, [10]))
DEVICE_OUTLETS_MAP['RAID01B'] = ((pduUb, [10]))
DEVICE_OUTLETS_MAP['RAID02A'] = ((pduUa, [9]))
DEVICE_OUTLETS_MAP['RAID02B'] = ((pduUb, [9]))
DEVICE_OUTLETS_MAP['Switch1810_24_monitoring'] = ((pduUa, [22])) # check this
DEVICE_OUTLETS_MAP['Switch1910_8'] = ((pduUa, [21]))
DEVICE_OUTLETS_MAP['GPUServer01'] = ((pduUa, [1, 2, 3]))
DEVICE_OUTLETS_MAP['GPUServer02'] = ((pduUb, [1, 2, 3]))
DEVICE_OUTLETS_MAP['GPUServer03'] = ((pdu1a, [17, 18, 19]))
DEVICE_OUTLETS_MAP['GPUServer04'] = ((pdu1b, [17, 18, 19]))
DEVICE_OUTLETS_MAP['GPUServer05'] = ((pdu1b, [9, 10, 11]))
DEVICE_OUTLETS_MAP['GPUServer06'] = ((pdu1a, [9, 10, 11]))
DEVICE_OUTLETS_MAP['GPUServer07'] = ((pdu1a, [1, 2, 3]))
DEVICE_OUTLETS_MAP['GPUServer08'] = ((pdu1b, [1, 2, 3]))
DEVICE_OUTLETS_MAP['Switch5800'] = ((pdu1a, [15]))
DEVICE_OUTLETS_MAP['Switch1810_24_gpu'] = ((pdu1a, [23]))

PDU_NUMERATION = {}
PDU_NUMERATION[0] = 'rPDU01'
PDU_NUMERATION[1] = 'rPDU02'
PDU_NUMERATION[2] = 'rPDU03'
PDU_NUMERATION[3] = 'rPDU04'

PDUS = ('rPDU01', 'rPDU02', 'rPDU03', 'rPDU04')
# bmc devices, which is not in calc nodes
OTHER_BMC_DEVICES = ('MonitoringServerBMC', 'ControlServerBMC',
                     'FileServer01BMC', 'FileServer02BMC')
GPU_BMC_DEVICES = ['GPUServerBMC01',
                 'GPUServerBMC02',
                 'GPUServerBMC03',
                 'GPUServerBMC04',
                 'GPUServerBMC05',
                 'GPUServerBMC06',
                 'GPUServerBMC07']
