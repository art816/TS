
import nms.core.parameters as pars
from nms.core.context import Context
from nms.core.devices import Device, GeneralDevice, DeviceContainer

def get_parameters_for_cpu_temperature():
    temp_params = {}
    for num in range(1, 6):
        name = "LocCpuTemp0" + str(num)
        desc = "Температура ядра CPU " + str(num)
        last_oid = 48 + num
        oid = ("1.3.6.1.4.1.8072.1.3.2.3.1.1.14.103.101.116.95.99.112.117.95"
               ".116.101.109.112.95." + str(last_oid))
        temp_params[name] = pars.Parameter(name, desc, desc, "float", oid,
                                           "snmp", "C")
    return temp_params

def create_context():
    """ Creates test context with one laptop only. """
    context = Context()
    cpu_temp_params = get_parameters_for_cpu_temperature()
    context.parameters.update(cpu_temp_params)
    name = 'laptop'
    localhost_param_list = ['memTotalReal',
                            'memOccupiedReal', 'memCachedReal', 'memFreeReal',
                            'memFreePercent', 'online', 'cpuUser',
                            'diskOccupied', 'diskOccupiedBytes',
                            'diskBlockSize', 'diskTotalBytes', 'diskTotal',
                            ]
    localhost_param_list.extend(list(cpu_temp_params))
    context.devices[name] = Device(name, 'локальная машина', 'snmp',
                                   localhost_param_list)
    context.devices[name].ip_address = '127.0.0.1'
    context.general_devices[name] = GeneralDevice(
        name, 'Вычислительный сервер',
        '', [name], context)
    gdev = context.general_devices[name]
    gdev.main_parameters = []
    gdev.main_parameters.append('cpuUser')
    gdev.main_parameters.append('memFreePercent')
    gdev.img = 'dev_img_storage_server.png'
    container = DeviceContainer(gdev.name, gdev.full_name, gdev.description,
                                context)
    container.leaf = True
    container.is_online = gdev.is_online
    container.do_have_alerts = gdev.do_have_alerts
    context.device_containers[gdev.name] = container
    # TODO: parameters should be configured here.
    return context

